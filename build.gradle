plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.4'
	id 'io.spring.dependency-management' version '1.1.0'
	//id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10' 이클립스에서는 플러그인 방식이 되지 않는다.
}

group = 'com.project'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'



repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'//구글,카카오 로그인 인증을 위해
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect:3.0.0'//하나의 레이아웃을 여러 페이지에 적용시키기 위해
	implementation 'org.thymeleaf.extras:thymeleaf-extras-java8time:3.0.4.RELEASE'//타임리프에서 날짜 형식을 출력하기 위해
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api" //querydsl이 스프링부트가 3.0버전이 되면서 javax에서 jakarta로 변경되었기 때문에 querydsl을 사용하려면 이렇게 해줘야한다.
	
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	implementation 'io.jsonwebtoken:jjwt:0.9.1' //로그인 할 때 토큰을 받고 시간제한을 설정하기 위해
	implementation 'org.apache.commons:commons-lang3:3.12.0'
}
//querydsl 빌드 옵션
def querydslDir = "$buildDir/generated/querydsl" //Qclass가 생성되는 경로

sourceSets {
	main.java.srcDirs += [ querydslDir ]
}

tasks.withType(JavaCompile) {
	options.annotationProcessorGeneratedSourcesDirectory = file(querydslDir)
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

clean.doLast {
	file(querydslDir).deleteDir()
}

tasks.named('test') {
	useJUnitPlatform()
}
